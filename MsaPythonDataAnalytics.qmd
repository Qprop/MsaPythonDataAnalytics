---
title: "Data Analytics Introduction Using Python Training"
jupyter: python3
format: 
  revealjs:
    theme: serif
    smaller: false
    scrollable: true
code-fold: true
---

# Introduction

## Welcome

We are embarking on a journey, with multiple stops but the destination will be far out. The stops will be areas of expertise and learning that we will have done and practiced but the destination is the progressive accumulation of the learning.

With the ever evolving changing of technology the destination will always be changing.

------------------------------------------------------------------------

::: {.columns}

::: {.column width="60%"}
### Assumptions {.smaller}

Have some limited or little knowledge of Microsoft excel functions e.g `=sum(C1,C2)`, though not mandatory it makes it easier to grasp concepts slightly faster. Though if you remember the simple mathematics we do everyday of summing and adding money then you are good :).
:::

::: {.column width="40%"}
### Requirements {.smaller}

-   *Interest* and *Desire* to learn
-   Working Computer (Laptop/Desktop)
-   Access to internet once in a while to download a few resource materials
:::
:::



------------------------------------------------------------------------



::: {.columns}

::: {.column width="40%"}
### Teaching guide

-   Mixed instructional guide, with the presentation but focused on getting more hard skills

-   Engagements and practice on the fly
:::

::: {.column width="60%"}
### About

Just me but you can see you can get the details from [qprop](https://www.qprop.me/about/)

Will be getting assisted by Alex.
:::
:::

## Data Analytics {.smaller}

Colloquial term ***data analytics*** can be coined as both a science and an art. With the ***science*** part majorly following statistical/mathematical procedures used, *art* comes from the different ways and methods someone can use to present and execute the since part of it.




### Tools for Data Analytics

There are various tools/Software/applications can be used for data analysis


::: {.columns}

::: {.column width="50%"}
- Paid for: 
  - Ms Excel
  - Ms Power BI
  - SPSS
  - STATA
  - SAS
  - MS SQL
  
:::
::: {.column width="50%"}

  
- Open Source: **Free**
  - ***Python***
  - R
  - Postgres
  - Julia
  - MangoDB
  - CouchDB
  
:::
:::


# Python {.smaller}

## Python Introduction  

Open Source Programming language.First come to use in the early 1990's and developed by **Guido Van Rossum** more information [here](https://en.wikipedia.org/wiki/Python_(programming_language)).


::: {.columns}

::: {.column width="50%"}

### Advantages

- Easy to learn
- Almost language like syntax
- Fast execution
- All Purpose programming language:
  - used for software development
  - used for data analysis
  - used for machine learning
  - used for web development

:::

::: {.column width="50%"}

### Disadvantages

- Some convections are different from other programming language
- High level interpreted language

:::
:::



## Python Interface

Python programming language uses it's in build command prompt frequently called *CLI* standing for *Command Line Interface*, search through windows/MAC program files and you should see *Python 3.0.0)* there are various versions of python and depending on which one you have installed this will determine the python CLI.

Though you can be able to do everything using this, it doesn't give an intuitive user interface hence the reason for development of *IDE* Integrated Development Environment. 

*IDE* is the dashboard similar to car dashboard but the actual software the engine is now *python* for this case.


Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

```{python}
#| echo: true

1 + 1
```


## Python modules


## Python numpy | Introduction {.smaller}

***numpy***: python module/library specialized in *Arrays and Vectorized Computation*.

NumPy, short for Numerical Python, is one of the most important foundational packages for numerical computing in Python. Numpy works with array from 1-n dimenisional.

```{python}

#| echo: true

import numpy as np

my_arr = np.arange(10)

#my_list = list(range(10)) #inbuilt python

my_arr
```

Multidimensional Array

```{python}
#| echo: true

data = np.array([[1.5, -0.1, 3], [0, -3, 6.5]])

data

```

Array descriptors

```{python}
#| echo: true

data.shape
data.dtype
data.ndim

```


## Python Pandas | Introduction

***Pandas*** : Python module/library enhancing data manipulation tools designed to make data cleaning and analysis fast and convenient in Python. Works intandem with *numpy* and is the core working under the hood.

```{python}
#| echo: true

import pandas as pd

obj_series = pd.Series([4, 7, -5, 3])

obj_series

```

Main difference of pandas with numpy is that it has indexed values and designed for working with tabular or heterogeneous data.

## Python Visualization | Matplotlip & Seaborn

## Folder Structure & File Management



# SQL

## SQL Introduction  {.smaller}